General
- follow a more object oriented design
	- make the DOM more object oriented
	- make a plugin object
- toolbox ordering

-Base
- background color, update other plugins to use this
- opacity, update other plugins to use this
- Resize/Crop Canvas tool
- Grid overlay (background) on the canvas

History


Annotation
- move annotation helper functions outside of the plugin functions
- annotation set initial brush color and width

Text
- text background

Shapes
- add stroke to objects
- stroke width
- stroke color
- shapes to add
- shadows

Crop
- Crop the canvas, not the image

Drag and Drop File API

Make your own util library

LIMS Specific
- img load might cause server out of sessions. better to load through browser instead - x
- img create/adding to attribute cannot have prefix in front of attribute name
- change image file id on new one attached in json stored - X
- do not allow deletion of image from the canvas;
- Do Logging
- Tickets for home page on lims, for gadgets

- Warning for users that entities associated with other entities might run into trouble when changning revision. example -> experiment and containers and sampels.

-Attlassian, Git implementation
-Linux training (core specific)
-Java 1 (one?)
-Docker

-Tableau drop down to create reports from query page

-Hiring

	/*
	--Because there is an issue with image and sessions in the LIMS
	--The request does not get the session, therefor have the browser load the image
	
	--This also solves the cloning (copy -> paste plugin) issue because 
	that piece of code uses fromObject as well
	*/
	
	fabric.Image.fromObject = function(object, callback){
		var newImg = new Image();
		newImg.onload = function(){
			shape1.disableHistoryStackChange = true;
			fabric.Image.prototype._initFilters.call(object, object, function(filters) {
		        object.filters = filters || [ ];
		        var instance = new fabric.Image(newImg, object);
		        callback && callback(instance);
		        
	   			shape1.disableHistoryStackChange = false;
	   		});
		}
		newImg.src = object.src;
	}